
    int binary_exponentiation_iterative(int a,int b,int M){
     int ans=1;
     while(b){
         if(b&1){
             ans=(ans*1LL * a) %M;
         }
         b>>=1;
         a=(a*1LL *a)%M;
     }
    return ans;
}
    int countWays(vector<vector<int>>& ranges) {
     
        int modulo=1000000007;
        sort(ranges.begin(),ranges.end());
        int start=ranges[0][0];
        int end=ranges[0][1];
        int num=1;
        for(int i=1;i<ranges.size();i++){
             if(ranges[i][0]>end){
                 num++;
                 start=ranges[i][0];
                 end=ranges[i][1];
             }
             end=max(end,ranges[i][1]);
         }
          int ans=binary_exponentiation_iterative(2,num,modulo);
         // ans= ans%modulo;
        return ans;
    }
